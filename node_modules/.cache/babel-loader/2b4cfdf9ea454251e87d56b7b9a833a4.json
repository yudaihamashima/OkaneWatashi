{"ast":null,"code":"import { atom } from 'recoil';\nconst categories = [{\n  id: 1,\n  name: 'food'\n}, {\n  id: 2,\n  name: 'lent'\n}, {\n  id: 3,\n  name: 'tranceportation'\n}, {\n  id: 3,\n  name: 'tranceportation'\n}];\nconst payments = [{\n  paymentName: 'キャベツ',\n  cost: 130,\n  category: '食費',\n  payedById: 0,\n  date: '2022-07-01'\n}, {\n  paymentName: '高速道路代',\n  cost: 1300,\n  category: '交通費',\n  payedById: 1,\n  date: '2022-07-02'\n}, {\n  paymentName: 'ナムル',\n  cost: 120,\n  category: '食費',\n  payedById: 1,\n  date: '2022-07-05'\n}, {\n  paymentName: 'ラーメン',\n  cost: 2020,\n  category: '外食',\n  payedById: 0,\n  date: '2022-07-09'\n}];\nexport const paymentState = atom({\n  key: 'paymentState',\n  default: payments.map((payment, index) => ({\n    id: index,\n    paymentName: payment.paymentName,\n    cost: payment.cost,\n    category: payment.category,\n    payedById: payment.payedById,\n    date: payment.date,\n    status: 'personal',\n    onEdit: false\n  }))\n});\nexport const emptyPayments = atom({\n  key: 'emptyPayment',\n  default: [{\n    id: -1,\n    paymentName: '',\n    cost: 0,\n    category: '',\n    payedById: 0,\n    date: '',\n    status: 'personal',\n    onEdit: false\n  }, {\n    id: -1,\n    paymentName: '',\n    cost: 0,\n    category: '',\n    payedById: 1,\n    date: '',\n    status: 'personal',\n    onEdit: false\n  }]\n});\nexport const defaultEmptyPayments = atom({\n  key: 'defaultEmptyPayments',\n  default: [{\n    id: -1,\n    paymentName: '',\n    cost: 0,\n    category: '',\n    payedById: 0,\n    date: '',\n    status: 'personal',\n    onEdit: false\n  }, {\n    id: -1,\n    paymentName: '',\n    cost: 0,\n    category: '',\n    payedById: 1,\n    date: '',\n    status: 'personal',\n    onEdit: false\n  }]\n});\nexport const categoryState = atom({\n  key: 'categoryState',\n  default: categories.map(category => ({\n    id: category.id,\n    name: category.name\n  }))\n});\nexport const names = atom({\n  key: 'names',\n  default: ['Yudai', 'Ami']\n});","map":{"version":3,"names":["atom","categories","id","name","payments","paymentName","cost","category","payedById","date","paymentState","key","default","map","payment","index","status","onEdit","emptyPayments","defaultEmptyPayments","categoryState","names"],"sources":["/Users/yudaihamashima/programing/products/2_react_practice/ReactPractice-main/react-practice/src/recoil/atoms.tsx"],"sourcesContent":["import { atom } from 'recoil'\r\nimport { Payment, Category } from '../interfaces/payment'\r\n\r\nconst categories = [\r\n    {\r\n        id: 1,\r\n        name: 'food',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'lent',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'tranceportation',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'tranceportation',\r\n    },\r\n]\r\n\r\nconst payments = [\r\n    {\r\n        paymentName: 'キャベツ',\r\n        cost: 130,\r\n        category: '食費',\r\n        payedById: 0,\r\n        date: '2022-07-01',\r\n    },\r\n    {\r\n        paymentName: '高速道路代',\r\n        cost: 1300,\r\n        category: '交通費',\r\n        payedById: 1,\r\n        date: '2022-07-02',\r\n    },\r\n    {\r\n        paymentName: 'ナムル',\r\n        cost: 120,\r\n        category: '食費',\r\n        payedById: 1,\r\n        date: '2022-07-05',\r\n    },\r\n    {\r\n        paymentName: 'ラーメン',\r\n        cost: 2020,\r\n        category: '外食',\r\n        payedById: 0,\r\n        date: '2022-07-09',\r\n    },\r\n]\r\n\r\nexport const paymentState = atom<Payment[]>({\r\n    key: 'paymentState',\r\n    default: payments.map((payment: any, index: number) => (\r\n    {\r\n        id: index,\r\n        paymentName: payment.paymentName,\r\n        cost: payment.cost,\r\n        category: payment.category,\r\n        payedById: payment.payedById,\r\n        date: payment.date,\r\n        status: 'personal',\r\n        onEdit: false,\r\n    })),\r\n})\r\n\r\nexport const emptyPayments = atom<Payment[]>({\r\n    key: 'emptyPayment',\r\n    default:[\r\n        {\r\n            id: -1,\r\n            paymentName: '',\r\n            cost: 0,\r\n            category: '',\r\n            payedById: 0,\r\n            date: '',\r\n            status: 'personal',\r\n            onEdit: false,\r\n        },\r\n        {\r\n            id: -1,\r\n            paymentName: '',\r\n            cost: 0,\r\n            category: '',\r\n            payedById: 1,\r\n            date: '',\r\n            status: 'personal',\r\n            onEdit: false,\r\n        },   \r\n    ]\r\n})\r\n\r\nexport const defaultEmptyPayments = atom<Payment[]>({\r\n    key: 'defaultEmptyPayments',\r\n    default:[\r\n        {\r\n            id: -1,\r\n            paymentName: '',\r\n            cost: 0,\r\n            category: '',\r\n            payedById: 0,\r\n            date: '',\r\n            status: 'personal',\r\n            onEdit: false,\r\n        },\r\n        {\r\n            id: -1,\r\n            paymentName: '',\r\n            cost: 0,\r\n            category: '',\r\n            payedById: 1,\r\n            date: '',\r\n            status: 'personal',\r\n            onEdit: false\r\n        },   \r\n    ]\r\n})\r\n\r\nexport const categoryState = atom<Category[]>({\r\n    key: 'categoryState',\r\n    default: categories.map((category) => (\r\n    {\r\n        id: category.id,\r\n        name: category.name,\r\n    })),\r\n})\r\n\r\nexport const names = atom<string[]>({\r\n    key: 'names',\r\n    default: ['Yudai', 'Ami'],\r\n})\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}