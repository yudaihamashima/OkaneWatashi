{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/products/2_react_practice/ReactPractice-main/react-practice/src/crud/test.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { paymentState } from '../recoil/atoms';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport PaymentsTables from './actions/paymentsTables';\nimport Calculation1 from './actions/calculation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const name1 = 'Yudai';\n  const name2 = 'Ami';\n  const [payments, setPayments] = useRecoilState(paymentState);\n  const navigate = useNavigate();\n  const payments1 = payments.filter(payment => payment.payedById === 1);\n  const payments2 = payments.filter(payment => payment.payedById === 2);\n  const emptyPayment = {\n    id: null,\n    paymentName: '',\n    cost: null,\n    category: '',\n    payedById: null,\n    date: '',\n    status: 'personal'\n  };\n  const [newPayment1, setNewPayment1] = useState(emptyPayment);\n  const [newPayment2, setNewPayment2] = useState(emptyPayment);\n\n  const handleChangedState1 = payment => {};\n\n  const handleChangeName1 = event => {};\n\n  const handleChangeCategory1 = event => {};\n\n  const handleChangeCost1 = event => {};\n\n  const handleSubmit1 = () => {};\n\n  const handle = payment => {\n    if (payment.status === 'personal') {\n      const newPayment = { ...payment,\n        status: 'common'\n      };\n      const newPayments = [...payments.slice(0, payment.id), newPayment, ...payments.slice(payment.id + 1)];\n      setPayments(newPayments);\n    }\n\n    if (payment.status === 'common') {\n      const newPayment = { ...payment,\n        status: 'personal'\n      };\n      const newPayments = [...payments.slice(0, payment.id), newPayment, ...payments.slice(payment.id + 1)];\n      setPayments(newPayments);\n    }\n\n    console.log(payments);\n  };\n\n  const Calculation = () => {\n    const commonPayments1 = payments1.filter(payment => payment.status === 'common');\n    const commonPayments2 = payments2.filter(payment => payment.status === 'common');\n    let tmpCommonPaymentsCost1 = 0;\n    commonPayments1.map(payment => {\n      tmpCommonPaymentsCost1 = tmpCommonPaymentsCost1 + payment.cost;\n    });\n    const commonPaymentsCost1 = tmpCommonPaymentsCost1;\n    let tmpCommonPaymentsCost2 = 0;\n    commonPayments2.map(payment => {\n      tmpCommonPaymentsCost2 = tmpCommonPaymentsCost2 + payment.cost;\n    });\n    const commonPaymentsCost2 = tmpCommonPaymentsCost2;\n    const give2to1 = commonPaymentsCost1 * 0.5;\n    const give1to2 = commonPaymentsCost2 * 0.5;\n    const calculatedGive2to1 = give2to1 - give1to2;\n\n    if (calculatedGive2to1 > 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: [name2, \" \\u2192 \", name1, \" : \", calculatedGive2to1, \" \\u5186\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    if (calculatedGive2to1 === 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"\\u4E8C\\u4EBA\\u3068\\u3082\\u540C\\u984D\\u652F\\u6255\\u3063\\u3066\\u3044\\u307E\\u3059\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    if (calculatedGive2to1 < 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: [name1, \" \\u2192 \", name2, \" : \", calculatedGive2to1 * -1, \" \\u5186\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calculation1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaymentsTables, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"+wcIfewGpfA6u7dG3cLi3n2plr8=\", false, function () {\n  return [useRecoilState, useNavigate];\n});\n\n_c = Test;\nexport default Test;\n{\n  /* \r\n         let tmpTotalCost1 = 0\r\n         payments1.map((payment) => {\r\n             tmpTotalCost1 = tmpTotalCost1 + payment.cost\r\n         })\r\n         const totalCost1 = tmpTotalCost1\r\n  \n         let tmpTotalCost2 = 0\r\n         payments2.map((payment) => {\r\n             tmpTotalCost2 = tmpTotalCost2 + payment.cost\r\n         })\r\n         const totalCost2 = tmpTotalCost2\r\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useRecoilState","paymentState","useNavigate","Typography","PaymentsTables","Calculation1","Test","name1","name2","payments","setPayments","navigate","payments1","filter","payment","payedById","payments2","emptyPayment","id","paymentName","cost","category","date","status","newPayment1","setNewPayment1","newPayment2","setNewPayment2","handleChangedState1","handleChangeName1","event","handleChangeCategory1","handleChangeCost1","handleSubmit1","handle","newPayment","newPayments","slice","console","log","Calculation","commonPayments1","commonPayments2","tmpCommonPaymentsCost1","map","commonPaymentsCost1","tmpCommonPaymentsCost2","commonPaymentsCost2","give2to1","give1to2","calculatedGive2to1"],"sources":["/Users/yudaihamashima/programing/products/2_react_practice/ReactPractice-main/react-practice/src/crud/test.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useRecoilState, useRecoilValue } from 'recoil'\r\nimport { categoryState, paymentState } from '../recoil/atoms'\r\nimport { Payment } from '../interfaces/payment'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, TextField, Typography } from '@mui/material'\r\nimport {  \r\n    TableContainer, \r\n    Table,\r\n    TableHead, \r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Checkbox\r\n} from '@mui/material'\r\nimport { Paper } from '@mui/material'\r\nimport { Box, Grid } from '@mui/material'\r\nimport { margin } from '@mui/system'\r\n\r\nimport PaymentsTables from './actions/paymentsTables'\r\nimport Calculation1 from './actions/calculation'\r\n\r\n\r\nfunction Test() {\r\n    const name1 = 'Yudai'\r\n    const name2 = 'Ami'\r\n\r\n    const [payments, setPayments] = useRecoilState(paymentState)\r\n    const navigate = useNavigate()\r\n\r\n    const payments1 = payments.filter(payment => payment.payedById === 1)\r\n    const payments2 = payments.filter(payment => payment.payedById === 2) \r\n\r\n    const emptyPayment = {\r\n        id: null,\r\n        paymentName: '',\r\n        cost: null,\r\n        category: '',\r\n        payedById: null,\r\n        date: '',\r\n        status: 'personal',\r\n    }\r\n    const [newPayment1, setNewPayment1] = useState(emptyPayment)\r\n    const [newPayment2, setNewPayment2] = useState(emptyPayment)\r\n\r\n    const handleChangedState1 = (payment: Payment) => {\r\n\r\n    }\r\n\r\n    const handleChangeName1 = (event: any) => {\r\n\r\n    }\r\n\r\n    const handleChangeCategory1 = (event: any) => {\r\n        \r\n    }\r\n\r\n    const handleChangeCost1 = (event: any) => {\r\n        \r\n    }\r\n\r\n    const handleSubmit1 = () => {\r\n\r\n    } \r\n\r\n\r\n    const handle = (payment: Payment) => {\r\n        if(payment.status === 'personal'){\r\n            const newPayment = {...payment, status: 'common'}\r\n            const newPayments = [...payments.slice(0,payment.id), newPayment, ...payments.slice(payment.id+1)]\r\n            setPayments(newPayments)\r\n        }\r\n        if(payment.status === 'common'){\r\n            const newPayment = {...payment, status: 'personal'}\r\n            const newPayments = [...payments.slice(0,payment.id), newPayment, ...payments.slice(payment.id+1)]\r\n            setPayments(newPayments)\r\n        }\r\n        console.log(payments)\r\n    }\r\n\r\n    const Calculation = () => {\r\n        const commonPayments1 = payments1.filter((payment) => payment.status === 'common')\r\n        const commonPayments2 = payments2.filter((payment) => payment.status === 'common')\r\n\r\n        let tmpCommonPaymentsCost1 = 0\r\n        commonPayments1.map((payment) => {\r\n            tmpCommonPaymentsCost1 = tmpCommonPaymentsCost1 + payment.cost\r\n        })\r\n        const commonPaymentsCost1 = tmpCommonPaymentsCost1\r\n\r\n        let tmpCommonPaymentsCost2 = 0\r\n        commonPayments2.map((payment) => {\r\n            tmpCommonPaymentsCost2 = tmpCommonPaymentsCost2 + payment.cost\r\n        })\r\n        const commonPaymentsCost2 = tmpCommonPaymentsCost2\r\n\r\n        const give2to1 = commonPaymentsCost1 * 0.5\r\n        const give1to2 = commonPaymentsCost2 * 0.5\r\n\r\n        const calculatedGive2to1 = give2to1 - give1to2\r\n\r\n        if(calculatedGive2to1 > 0) {\r\n            return(\r\n                <>\r\n                    <Typography variant='h3'>{name2} → {name1} : {calculatedGive2to1} 円</Typography>\r\n                </>\r\n            )\r\n        }\r\n        if(calculatedGive2to1 === 0) {\r\n            return(\r\n                <>\r\n                    <Typography variant='h3'>二人とも同額支払っています</Typography>\r\n                </>\r\n            )\r\n        }\r\n        if(calculatedGive2to1 < 0) {\r\n            return(\r\n                <>\r\n                    <Typography variant='h3'>{name1} → {name2} : {calculatedGive2to1*(-1)} 円</Typography>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Calculation1 />\r\n            <PaymentsTables />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n\r\n\r\n{/* \r\n        let tmpTotalCost1 = 0\r\n        payments1.map((payment) => {\r\n            tmpTotalCost1 = tmpTotalCost1 + payment.cost\r\n        })\r\n        const totalCost1 = tmpTotalCost1\r\n\r\n        let tmpTotalCost2 = 0\r\n        payments2.map((payment) => {\r\n            tmpTotalCost2 = tmpTotalCost2 + payment.cost\r\n        })\r\n        const totalCost2 = tmpTotalCost2\r\n*/}"],"mappings":"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"},"metadata":{},"sourceType":"module"}